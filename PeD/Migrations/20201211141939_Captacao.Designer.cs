// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PeD.Data;

namespace PeD.Migrations
{
    [DbContext(typeof(GestorDbContext))]
    [Migration("20201211141939_Captacao")]
    partial class Captacao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PeD.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CatalogEmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("FotoPerfilId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("CatalogEmpresaId");

                    b.HasIndex("FotoPerfilId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("PeD.Models.Captacao.Captacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Cancelamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Consideracoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContratoSugeridoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CriadorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DemandaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EnvioCaptacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Termino")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContratoSugeridoId");

                    b.HasIndex("CriadorId");

                    b.HasIndex("DemandaId");

                    b.ToTable("Captacoes");
                });

            modelBuilder.Entity("PeD.Models.Captacao.CaptacaoArquivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcessoFornecedor")
                        .HasColumnType("bit");

                    b.Property<int>("CaptacaoId")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CaptacaoId");

                    b.HasIndex("UserId");

                    b.ToTable("CaptacaoArquivos");
                });

            modelBuilder.Entity("PeD.Models.Captacao.CaptacaoContrato", b =>
                {
                    b.Property<int>("CaptacaoId")
                        .HasColumnType("int");

                    b.Property<int>("ContratoId")
                        .HasColumnType("int");

                    b.HasKey("CaptacaoId", "ContratoId");

                    b.HasIndex("ContratoId");

                    b.ToTable("CaptacaoContratos");
                });

            modelBuilder.Entity("PeD.Models.Captacao.CaptacaoFornecedor", b =>
                {
                    b.Property<int>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<int>("CaptacaoId")
                        .HasColumnType("int");

                    b.HasKey("FornecedorId", "CaptacaoId");

                    b.HasIndex("CaptacaoId");

                    b.ToTable("CaptacoesFornecedores");
                });

            modelBuilder.Entity("PeD.Models.Captacao.CaptacaoSugestaoFornecedor", b =>
                {
                    b.Property<int>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<int>("CaptacaoId")
                        .HasColumnType("int");

                    b.HasKey("FornecedorId", "CaptacaoId");

                    b.HasIndex("CaptacaoId");

                    b.ToTable("CaptacaoSugestoesFornecedores");
                });

            modelBuilder.Entity("PeD.Models.Captacao.Clausula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Conteudo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Clausulas");
                });

            modelBuilder.Entity("PeD.Models.Captacao.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Conteudo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Footer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("PeD.Models.Captacao.PropostaFornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaptacaoId")
                        .HasColumnType("int");

                    b.Property<bool>("Finalizado")
                        .HasColumnType("bit");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<int>("Participacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaptacaoId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("PropostaFornecedor");
                });

            modelBuilder.Entity("PeD.Models.Captacao.SugestaoClausula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClausulaId")
                        .HasColumnType("int");

                    b.Property<string>("Conteudo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<int?>("PropostaFornecedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClausulaId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("PropostaFornecedorId");

                    b.ToTable("SugestaoClausula");
                });

            modelBuilder.Entity("PeD.Models.Catalogs.CatalogAtividade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogCategoriaContabilGestaoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogCategoriaContabilGestaoId");

                    b.ToTable("CatalogAtividade");
                });

            modelBuilder.Entity("PeD.Models.Catalogs.CatalogCategoriaContabilGestao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatalogCategoriaContabilGestao");
                });

            modelBuilder.Entity("PeD.Models.Catalogs.CatalogEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatalogEmpresas");
                });

            modelBuilder.Entity("PeD.Models.Catalogs.CatalogEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatalogEstados");
                });

            modelBuilder.Entity("PeD.Models.Catalogs.CatalogPais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatalogPaises");
                });

            modelBuilder.Entity("PeD.Models.Catalogs.CatalogProdutoFaseCadeia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatalogProdutoFaseCadeia");
                });

            modelBuilder.Entity("PeD.Models.Catalogs.CatalogProdutoTipoDetalhado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CatalogProdutoFaseCadeiaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogProdutoFaseCadeiaId");

                    b.ToTable("CatalogProdutoTipoDetalhado");
                });

            modelBuilder.Entity("PeD.Models.Catalogs.CatalogSegmento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatalogSegmentos");
                });

            modelBuilder.Entity("PeD.Models.Catalogs.CatalogStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatalogStatus");
                });

            modelBuilder.Entity("PeD.Models.Catalogs.CatalogSubTema", b =>
                {
                    b.Property<int>("SubTemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CatalogTemaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubTemaId");

                    b.HasIndex("CatalogTemaId");

                    b.ToTable("CatalogSubTemas");
                });

            modelBuilder.Entity("PeD.Models.Catalogs.CatalogTema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatalogTema");
                });

            modelBuilder.Entity("PeD.Models.Demandas.Demanda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CaptacaoDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CriadorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EtapaAtual")
                        .HasColumnType("int");

                    b.Property<string>("RevisorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SuperiorDiretoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CriadorId");

                    b.HasIndex("RevisorId");

                    b.HasIndex("SuperiorDiretoId");

                    b.ToTable("Demandas");
                });

            modelBuilder.Entity("PeD.Models.Demandas.DemandaComentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("DemandaId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DemandaId");

                    b.HasIndex("UserId");

                    b.ToTable("DemandaComentarios");
                });

            modelBuilder.Entity("PeD.Models.Demandas.DemandaFormFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DemandaFormId")
                        .HasColumnType("int");

                    b.Property<int?>("DemandaFormValuesId")
                        .HasColumnType("int");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DemandaFormValuesId");

                    b.HasIndex("FileId");

                    b.ToTable("DemandaFormFiles");
                });

            modelBuilder.Entity("PeD.Models.Demandas.DemandaFormHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormValuesId")
                        .HasColumnType("int");

                    b.Property<int>("Revisao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormValuesId");

                    b.ToTable("DemandaFormHistoricos");
                });

            modelBuilder.Entity("PeD.Models.Demandas.DemandaFormValues", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnType("varchar(max)");

                    b.Property<int>("DemandaId")
                        .HasColumnType("int");

                    b.Property<string>("FormKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Html")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Revisao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DemandaFormValues");
                });

            modelBuilder.Entity("PeD.Models.Demandas.DemandaLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Acao")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DemandaId")
                        .HasColumnType("int");

                    b.Property<string>("StatusAnterior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusNovo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tela")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DemandaId");

                    b.HasIndex("UserId");

                    b.ToTable("DemandaLogs");
                });

            modelBuilder.Entity("PeD.Models.FileUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Files");

                    b.HasDiscriminator<string>("Discriminator").HasValue("FileUpload");
                });

            modelBuilder.Entity("PeD.Models.Fornecedores.CoExecutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("CoExecutores");
                });

            modelBuilder.Entity("PeD.Models.Fornecedores.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsavelId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ResponsavelId");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("PeD.Models.FotoPerfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FotoPerfil");
                });

            modelBuilder.Entity("PeD.Models.Projetos.AlocacaoRh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("EtapaId")
                        .HasColumnType("int");

                    b.Property<int>("HrsMes1")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes10")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes11")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes12")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes13")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes14")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes15")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes16")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes17")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes18")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes19")
                        .HasColumnType("int");

                    b.Property<int>("HrsMes2")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes20")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes21")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes22")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes23")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes24")
                        .HasColumnType("int");

                    b.Property<int>("HrsMes3")
                        .HasColumnType("int");

                    b.Property<int>("HrsMes4")
                        .HasColumnType("int");

                    b.Property<int>("HrsMes5")
                        .HasColumnType("int");

                    b.Property<int>("HrsMes6")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes7")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes8")
                        .HasColumnType("int");

                    b.Property<int?>("HrsMes9")
                        .HasColumnType("int");

                    b.Property<string>("Justificativa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<int?>("RecursoHumanoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("EtapaId");

                    b.HasIndex("ProjetoId");

                    b.HasIndex("RecursoHumanoId");

                    b.ToTable("AlocacoesRh");
                });

            modelBuilder.Entity("PeD.Models.Projetos.AlocacaoRm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpresaFinanciadoraId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpresaRecebedoraId")
                        .HasColumnType("int");

                    b.Property<int?>("EtapaId")
                        .HasColumnType("int");

                    b.Property<string>("Justificativa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<int>("Qtd")
                        .HasColumnType("int");

                    b.Property<int?>("RecursoMaterialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaFinanciadoraId");

                    b.HasIndex("EmpresaRecebedoraId");

                    b.HasIndex("EtapaId");

                    b.HasIndex("ProjetoId");

                    b.HasIndex("RecursoMaterialId");

                    b.ToTable("AlocacoesRm");
                });

            modelBuilder.Entity("PeD.Models.Projetos.AtividadesGestao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApoioCitenel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuscaAnterioridade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContratacaoAuditoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DedicacaoHorario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesenvFerramenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivulgacaoResultados")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParticipacaoMembros")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParticipacaoTecnicos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<string>("ProspTecnologica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResApoioCitenel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResBuscaAnterioridade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResContratacaoAuditoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResDedicacaoHorario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResDesenvFerramenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResDivulgacaoResultados")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResParticipacaoMembros")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResParticipacaoTecnicos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResProspTecnologica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId")
                        .IsUnique();

                    b.ToTable("AtividadesGestao");
                });

            modelBuilder.Entity("PeD.Models.Projetos.CatalogUserPermissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatalogUserPermissoes");
                });

            modelBuilder.Entity("PeD.Models.Projetos.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogEmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("CatalogEstadoId")
                        .HasColumnType("int");

                    b.Property<int>("Classificacao")
                        .HasColumnType("int");

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogEmpresaId");

                    b.HasIndex("CatalogEstadoId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("PeD.Models.Projetos.Etapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AtividadesRealizadas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("date");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Etapas");
                });

            modelBuilder.Entity("PeD.Models.Projetos.EtapaMes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EtapaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Mes")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EtapaId");

                    b.ToTable("EtapaMeses");
                });

            modelBuilder.Entity("PeD.Models.Projetos.EtapaProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EtapaId")
                        .HasColumnType("int");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EtapaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("EtapaProdutos");
                });

            modelBuilder.Entity("PeD.Models.Projetos.LogProjeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Acao")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<string>("StatusAnterior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusNovo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tela")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.HasIndex("UserId");

                    b.ToTable("LogProjetos");
                });

            modelBuilder.Entity("PeD.Models.Projetos.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogProdutoFaseCadeiaId")
                        .HasColumnType("int");

                    b.Property<int?>("CatalogProdutoTipoDetalhadoId")
                        .HasColumnType("int");

                    b.Property<int>("Classificacao")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FaseCadeia")
                        .HasColumnType("int");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogProdutoFaseCadeiaId");

                    b.HasIndex("CatalogProdutoTipoDetalhadoId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("PeD.Models.Projetos.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aplicabilidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AvaliacaoInicial")
                        .HasColumnType("bit");

                    b.Property<int?>("CatalogEmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("CatalogSegmentoId")
                        .HasColumnType("int");

                    b.Property<int?>("CatalogStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompartResultados")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Originalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pesquisas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Razoabilidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relevancia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TituloDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogEmpresaId");

                    b.HasIndex("CatalogSegmentoId");

                    b.HasIndex("CatalogStatusId");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("PeD.Models.Projetos.RecursoHumano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("Funcao")
                        .HasColumnType("int");

                    b.Property<bool?>("GerenteProjeto")
                        .HasColumnType("bit");

                    b.Property<int>("Nacionalidade")
                        .HasColumnType("int");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passaporte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<int>("Titulacao")
                        .HasColumnType("int");

                    b.Property<string>("UrlCurriculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorHora")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("RecursoHumanos");
                });

            modelBuilder.Entity("PeD.Models.Projetos.RecursoMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogAtividadeId")
                        .HasColumnType("int");

                    b.Property<int?>("CatalogCategoriaContabilGestaoId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaContabil")
                        .HasColumnType("int");

                    b.Property<string>("Especificacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogAtividadeId");

                    b.HasIndex("CatalogCategoriaContabilGestaoId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("RecursoMateriais");
                });

            modelBuilder.Entity("PeD.Models.Projetos.RegistroFinanceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AtividadeRealizada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Beneficiado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CatalogAtividadeId")
                        .HasColumnType("int");

                    b.Property<int?>("CatalogCategoriaContabilGestaoId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriaContabil")
                        .HasColumnType("int");

                    b.Property<string>("CnpjBeneficiado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataDocumento")
                        .HasColumnType("date");

                    b.Property<int?>("EmpresaFinanciadoraId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpresaRecebedoraId")
                        .HasColumnType("int");

                    b.Property<bool?>("EquiparLabExistente")
                        .HasColumnType("bit");

                    b.Property<bool?>("EquiparLabNovo")
                        .HasColumnType("bit");

                    b.Property<string>("EspecificacaoTecnica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuncaoRecurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ItemNacional")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Mes")
                        .HasColumnType("date");

                    b.Property<string>("NomeItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<int?>("QtdHrs")
                        .HasColumnType("int");

                    b.Property<int?>("QtdItens")
                        .HasColumnType("int");

                    b.Property<int?>("RecursoHumanoId")
                        .HasColumnType("int");

                    b.Property<int?>("RecursoMaterialId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("TipoDocumento")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogAtividadeId");

                    b.HasIndex("CatalogCategoriaContabilGestaoId");

                    b.HasIndex("EmpresaFinanciadoraId");

                    b.HasIndex("EmpresaRecebedoraId");

                    b.HasIndex("ProjetoId");

                    b.HasIndex("RecursoHumanoId");

                    b.HasIndex("RecursoMaterialId");

                    b.ToTable("RegistrosFinanceiros");
                });

            modelBuilder.Entity("PeD.Models.Projetos.RegistroObs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegistroFinanceiroId")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistroFinanceiroId");

                    b.HasIndex("UserId");

                    b.ToTable("RegistroObs");
                });

            modelBuilder.Entity("PeD.Models.Projetos.RelatorioFinal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AplicabilidadePrevista")
                        .HasColumnType("bit");

                    b.Property<string>("DescAbrangencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescAmbito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescAtividades")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescTecnica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescTestes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EspecificacaoProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JustificativaAplicabilidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JustificativaProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JustificativaTecnica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ProdutoAlcancado")
                        .HasColumnType("bit");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<bool?>("TecnicaPrevista")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId")
                        .IsUnique();

                    b.ToTable("RelatorioFinal");
                });

            modelBuilder.Entity("PeD.Models.Projetos.Resultados.ResultadoCapacitacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaPesquisa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CnpjInstituicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Conclusao")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<int>("RecursoHumanoId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("TituloTrabalho")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.HasIndex("RecursoHumanoId");

                    b.ToTable("ResultadosCapacitacao");
                });

            modelBuilder.Entity("PeD.Models.Projetos.Resultados.ResultadoEconomico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Percentagem")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("UnidadeBase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ValorBeneficio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("ValorIndicador")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("ResultadosEconomico");
                });

            modelBuilder.Entity("PeD.Models.Projetos.Resultados.ResultadoInfra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaPesquisa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CnpjReceptora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListaMateriais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeLaboratorio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("ResultadosInfra");
                });

            modelBuilder.Entity("PeD.Models.Projetos.Resultados.ResultadoIntelectual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroPedido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("ResultadosIntelectual");
                });

            modelBuilder.Entity("PeD.Models.Projetos.Resultados.ResultadoIntelectualDepositante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Entidade")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ResultadoIntelectualId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ResultadoIntelectualId");

                    b.ToTable("ResultadoIntelectualDepositantes");
                });

            modelBuilder.Entity("PeD.Models.Projetos.Resultados.ResultadoIntelectualInventor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RecursoHumanoId")
                        .HasColumnType("int");

                    b.Property<int>("ResultadoIntelectualId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecursoHumanoId");

                    b.HasIndex("ResultadoIntelectualId");

                    b.ToTable("ResultadoIntelectualInventores");
                });

            modelBuilder.Entity("PeD.Models.Projetos.Resultados.ResultadoProducao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CatalogPaisId")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Confirmacao")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogPaisId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("ResultadosProducao");
                });

            modelBuilder.Entity("PeD.Models.Projetos.Resultados.ResultadoSocioAmbiental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Positivo")
                        .HasColumnType("bit");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<bool?>("TecnicaPrevista")
                        .HasColumnType("bit");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("ResultadosSocioAmbiental");
                });

            modelBuilder.Entity("PeD.Models.Projetos.Tema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CatalogTemaId")
                        .HasColumnType("int");

                    b.Property<string>("OutroDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CatalogTemaId");

                    b.HasIndex("ProjetoId")
                        .IsUnique();

                    b.ToTable("Temas");
                });

            modelBuilder.Entity("PeD.Models.Projetos.TemaSubTema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CatalogSubTemaId")
                        .HasColumnType("int");

                    b.Property<string>("OutroDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TemaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CatalogSubTemaId");

                    b.HasIndex("TemaId");

                    b.ToTable("TemaSubTemas");
                });

            modelBuilder.Entity("PeD.Models.Projetos.Upload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Categoria")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("NomeArquivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<int?>("RegistroFinanceiroId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatorioFinalId")
                        .HasColumnType("int");

                    b.Property<int?>("ResultadoCapacitacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("ResultadoProducaoId")
                        .HasColumnType("int");

                    b.Property<int?>("TemaId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistroFinanceiroId");

                    b.HasIndex("RelatorioFinalId");

                    b.HasIndex("ResultadoCapacitacaoId");

                    b.HasIndex("ResultadoProducaoId");

                    b.HasIndex("TemaId");

                    b.HasIndex("UserId");

                    b.ToTable("Uploads");
                });

            modelBuilder.Entity("PeD.Models.Projetos.UserProjeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CatalogUserPermissaoId")
                        .HasColumnType("int");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CatalogUserPermissaoId");

                    b.HasIndex("ProjetoId");

                    b.HasIndex("UserId");

                    b.ToTable("UserProjetos");
                });

            modelBuilder.Entity("PeD.Models.SystemOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemOptions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PeD.Models.Demandas.DemandaFile", b =>
                {
                    b.HasBaseType("PeD.Models.FileUpload");

                    b.Property<int>("DemandaId")
                        .HasColumnType("int");

                    b.HasIndex("DemandaId");

                    b.HasDiscriminator().HasValue("DemandaFile");
                });

            modelBuilder.Entity("PeD.Models.ApplicationUser", b =>
                {
                    b.HasOne("PeD.Models.Catalogs.CatalogEmpresa", "CatalogEmpresa")
                        .WithMany()
                        .HasForeignKey("CatalogEmpresaId");

                    b.HasOne("PeD.Models.FotoPerfil", "FotoPerfil")
                        .WithMany()
                        .HasForeignKey("FotoPerfilId");
                });

            modelBuilder.Entity("PeD.Models.Captacao.Captacao", b =>
                {
                    b.HasOne("PeD.Models.Captacao.Contrato", "ContratoSugerido")
                        .WithMany()
                        .HasForeignKey("ContratoSugeridoId");

                    b.HasOne("PeD.Models.ApplicationUser", "Criador")
                        .WithMany()
                        .HasForeignKey("CriadorId");

                    b.HasOne("PeD.Models.Demandas.Demanda", "Demanda")
                        .WithMany()
                        .HasForeignKey("DemandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Captacao.CaptacaoArquivo", b =>
                {
                    b.HasOne("PeD.Models.Captacao.Captacao", "Captacao")
                        .WithMany("Arquivos")
                        .HasForeignKey("CaptacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeD.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PeD.Models.Captacao.CaptacaoContrato", b =>
                {
                    b.HasOne("PeD.Models.Captacao.Captacao", "Captacao")
                        .WithMany("Contratos")
                        .HasForeignKey("CaptacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeD.Models.Captacao.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Captacao.CaptacaoFornecedor", b =>
                {
                    b.HasOne("PeD.Models.Captacao.Captacao", "Captacao")
                        .WithMany("FornecedoresConvidados")
                        .HasForeignKey("CaptacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeD.Models.Fornecedores.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Captacao.CaptacaoSugestaoFornecedor", b =>
                {
                    b.HasOne("PeD.Models.Captacao.Captacao", "Captacao")
                        .WithMany("FornecedoresSugeridos")
                        .HasForeignKey("CaptacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeD.Models.Fornecedores.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Captacao.PropostaFornecedor", b =>
                {
                    b.HasOne("PeD.Models.Captacao.Captacao", "Captacao")
                        .WithMany("Propostas")
                        .HasForeignKey("CaptacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeD.Models.Fornecedores.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Captacao.SugestaoClausula", b =>
                {
                    b.HasOne("PeD.Models.Captacao.Clausula", "Clausula")
                        .WithMany()
                        .HasForeignKey("ClausulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeD.Models.Fornecedores.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeD.Models.Captacao.PropostaFornecedor", null)
                        .WithMany("SugestaoClausulas")
                        .HasForeignKey("PropostaFornecedorId");
                });

            modelBuilder.Entity("PeD.Models.Catalogs.CatalogAtividade", b =>
                {
                    b.HasOne("PeD.Models.Catalogs.CatalogCategoriaContabilGestao", null)
                        .WithMany("Atividades")
                        .HasForeignKey("CatalogCategoriaContabilGestaoId");
                });

            modelBuilder.Entity("PeD.Models.Catalogs.CatalogProdutoTipoDetalhado", b =>
                {
                    b.HasOne("PeD.Models.Catalogs.CatalogProdutoFaseCadeia", null)
                        .WithMany("TiposDetalhados")
                        .HasForeignKey("CatalogProdutoFaseCadeiaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Catalogs.CatalogSubTema", b =>
                {
                    b.HasOne("PeD.Models.Catalogs.CatalogTema", null)
                        .WithMany("SubTemas")
                        .HasForeignKey("CatalogTemaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Demandas.Demanda", b =>
                {
                    b.HasOne("PeD.Models.ApplicationUser", "Criador")
                        .WithMany()
                        .HasForeignKey("CriadorId");

                    b.HasOne("PeD.Models.ApplicationUser", "Revisor")
                        .WithMany()
                        .HasForeignKey("RevisorId");

                    b.HasOne("PeD.Models.ApplicationUser", "SuperiorDireto")
                        .WithMany()
                        .HasForeignKey("SuperiorDiretoId");
                });

            modelBuilder.Entity("PeD.Models.Demandas.DemandaComentario", b =>
                {
                    b.HasOne("PeD.Models.Demandas.Demanda", null)
                        .WithMany("Comentarios")
                        .HasForeignKey("DemandaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeD.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PeD.Models.Demandas.DemandaFormFile", b =>
                {
                    b.HasOne("PeD.Models.Demandas.DemandaFormValues", null)
                        .WithMany("Files")
                        .HasForeignKey("DemandaFormValuesId");

                    b.HasOne("PeD.Models.Demandas.DemandaFile", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Demandas.DemandaFormHistorico", b =>
                {
                    b.HasOne("PeD.Models.Demandas.DemandaFormValues", "FormValues")
                        .WithMany("Historico")
                        .HasForeignKey("FormValuesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Demandas.DemandaLog", b =>
                {
                    b.HasOne("PeD.Models.Demandas.Demanda", "Demanda")
                        .WithMany()
                        .HasForeignKey("DemandaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeD.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PeD.Models.FileUpload", b =>
                {
                    b.HasOne("PeD.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PeD.Models.Fornecedores.CoExecutor", b =>
                {
                    b.HasOne("PeD.Models.Fornecedores.Fornecedor", "Fornecedor")
                        .WithMany("CoExecutores")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Fornecedores.Fornecedor", b =>
                {
                    b.HasOne("PeD.Models.ApplicationUser", "Responsavel")
                        .WithMany()
                        .HasForeignKey("ResponsavelId");
                });

            modelBuilder.Entity("PeD.Models.Projetos.AlocacaoRh", b =>
                {
                    b.HasOne("PeD.Models.Projetos.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.HasOne("PeD.Models.Projetos.Etapa", "Etapa")
                        .WithMany()
                        .HasForeignKey("EtapaId");

                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithMany("AlocacoesRh")
                        .HasForeignKey("ProjetoId");

                    b.HasOne("PeD.Models.Projetos.RecursoHumano", "RecursoHumano")
                        .WithMany()
                        .HasForeignKey("RecursoHumanoId");
                });

            modelBuilder.Entity("PeD.Models.Projetos.AlocacaoRm", b =>
                {
                    b.HasOne("PeD.Models.Projetos.Empresa", "EmpresaFinanciadora")
                        .WithMany()
                        .HasForeignKey("EmpresaFinanciadoraId");

                    b.HasOne("PeD.Models.Projetos.Empresa", "EmpresaRecebedora")
                        .WithMany()
                        .HasForeignKey("EmpresaRecebedoraId");

                    b.HasOne("PeD.Models.Projetos.Etapa", "Etapa")
                        .WithMany()
                        .HasForeignKey("EtapaId");

                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithMany("AlocacoesRm")
                        .HasForeignKey("ProjetoId");

                    b.HasOne("PeD.Models.Projetos.RecursoMaterial", "RecursoMaterial")
                        .WithMany()
                        .HasForeignKey("RecursoMaterialId");
                });

            modelBuilder.Entity("PeD.Models.Projetos.AtividadesGestao", b =>
                {
                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithOne("Atividades")
                        .HasForeignKey("PeD.Models.Projetos.AtividadesGestao", "ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Projetos.Empresa", b =>
                {
                    b.HasOne("PeD.Models.Catalogs.CatalogEmpresa", "CatalogEmpresa")
                        .WithMany()
                        .HasForeignKey("CatalogEmpresaId");

                    b.HasOne("PeD.Models.Catalogs.CatalogEstado", "Estado")
                        .WithMany()
                        .HasForeignKey("CatalogEstadoId");

                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithMany("Empresas")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Projetos.Etapa", b =>
                {
                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithMany("Etapas")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Projetos.EtapaMes", b =>
                {
                    b.HasOne("PeD.Models.Projetos.Etapa", null)
                        .WithMany("EtapaMeses")
                        .HasForeignKey("EtapaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Projetos.EtapaProduto", b =>
                {
                    b.HasOne("PeD.Models.Projetos.Etapa", null)
                        .WithMany("EtapaProdutos")
                        .HasForeignKey("EtapaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeD.Models.Projetos.Produto", null)
                        .WithMany("EtapaProduto")
                        .HasForeignKey("ProdutoId");
                });

            modelBuilder.Entity("PeD.Models.Projetos.LogProjeto", b =>
                {
                    b.HasOne("PeD.Models.Projetos.Projeto", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeD.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PeD.Models.Projetos.Produto", b =>
                {
                    b.HasOne("PeD.Models.Catalogs.CatalogProdutoFaseCadeia", "CatalogProdutoFaseCadeia")
                        .WithMany()
                        .HasForeignKey("CatalogProdutoFaseCadeiaId");

                    b.HasOne("PeD.Models.Catalogs.CatalogProdutoTipoDetalhado", "CatalogProdutoTipoDetalhado")
                        .WithMany()
                        .HasForeignKey("CatalogProdutoTipoDetalhadoId");

                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithMany("Produtos")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Projetos.Projeto", b =>
                {
                    b.HasOne("PeD.Models.Catalogs.CatalogEmpresa", "CatalogEmpresa")
                        .WithMany()
                        .HasForeignKey("CatalogEmpresaId");

                    b.HasOne("PeD.Models.Catalogs.CatalogSegmento", "CatalogSegmento")
                        .WithMany()
                        .HasForeignKey("CatalogSegmentoId");

                    b.HasOne("PeD.Models.Catalogs.CatalogStatus", "CatalogStatus")
                        .WithMany()
                        .HasForeignKey("CatalogStatusId");
                });

            modelBuilder.Entity("PeD.Models.Projetos.RecursoHumano", b =>
                {
                    b.HasOne("PeD.Models.Projetos.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithMany("RecursosHumanos")
                        .HasForeignKey("ProjetoId");
                });

            modelBuilder.Entity("PeD.Models.Projetos.RecursoMaterial", b =>
                {
                    b.HasOne("PeD.Models.Catalogs.CatalogAtividade", "Atividade")
                        .WithMany()
                        .HasForeignKey("CatalogAtividadeId");

                    b.HasOne("PeD.Models.Catalogs.CatalogCategoriaContabilGestao", "CategoriaContabilGestao")
                        .WithMany()
                        .HasForeignKey("CatalogCategoriaContabilGestaoId");

                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithMany("RecursosMateriais")
                        .HasForeignKey("ProjetoId");
                });

            modelBuilder.Entity("PeD.Models.Projetos.RegistroFinanceiro", b =>
                {
                    b.HasOne("PeD.Models.Catalogs.CatalogAtividade", "Atividade")
                        .WithMany()
                        .HasForeignKey("CatalogAtividadeId");

                    b.HasOne("PeD.Models.Catalogs.CatalogCategoriaContabilGestao", "CategoriaContabilGestao")
                        .WithMany()
                        .HasForeignKey("CatalogCategoriaContabilGestaoId");

                    b.HasOne("PeD.Models.Projetos.Empresa", "EmpresaFinanciadora")
                        .WithMany()
                        .HasForeignKey("EmpresaFinanciadoraId");

                    b.HasOne("PeD.Models.Projetos.Empresa", "EmpresaRecebedora")
                        .WithMany()
                        .HasForeignKey("EmpresaRecebedoraId");

                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithMany("RegistroFinanceiro")
                        .HasForeignKey("ProjetoId");

                    b.HasOne("PeD.Models.Projetos.RecursoHumano", "RecursoHumano")
                        .WithMany()
                        .HasForeignKey("RecursoHumanoId");

                    b.HasOne("PeD.Models.Projetos.RecursoMaterial", "RecursoMaterial")
                        .WithMany()
                        .HasForeignKey("RecursoMaterialId");
                });

            modelBuilder.Entity("PeD.Models.Projetos.RegistroObs", b =>
                {
                    b.HasOne("PeD.Models.Projetos.RegistroFinanceiro", null)
                        .WithMany("ObsInternas")
                        .HasForeignKey("RegistroFinanceiroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeD.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PeD.Models.Projetos.RelatorioFinal", b =>
                {
                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithOne("RelatorioFinal")
                        .HasForeignKey("PeD.Models.Projetos.RelatorioFinal", "ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Projetos.Resultados.ResultadoCapacitacao", b =>
                {
                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithMany("ResultadosCapacitacao")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeD.Models.Projetos.RecursoHumano", "RecursoHumano")
                        .WithMany()
                        .HasForeignKey("RecursoHumanoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Projetos.Resultados.ResultadoEconomico", b =>
                {
                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithMany("ResultadosEconomico")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Projetos.Resultados.ResultadoInfra", b =>
                {
                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithMany("ResultadosInfra")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Projetos.Resultados.ResultadoIntelectual", b =>
                {
                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithMany("ResultadosIntelectual")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Projetos.Resultados.ResultadoIntelectualDepositante", b =>
                {
                    b.HasOne("PeD.Models.Projetos.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeD.Models.Projetos.Resultados.ResultadoIntelectual", null)
                        .WithMany("Depositantes")
                        .HasForeignKey("ResultadoIntelectualId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Projetos.Resultados.ResultadoIntelectualInventor", b =>
                {
                    b.HasOne("PeD.Models.Projetos.RecursoHumano", "RecursoHumano")
                        .WithMany()
                        .HasForeignKey("RecursoHumanoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeD.Models.Projetos.Resultados.ResultadoIntelectual", null)
                        .WithMany("Inventores")
                        .HasForeignKey("ResultadoIntelectualId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Projetos.Resultados.ResultadoProducao", b =>
                {
                    b.HasOne("PeD.Models.Catalogs.CatalogPais", "Pais")
                        .WithMany()
                        .HasForeignKey("CatalogPaisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithMany("ResultadosProducao")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Projetos.Resultados.ResultadoSocioAmbiental", b =>
                {
                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithMany("ResultadosSocioAmbiental")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Projetos.Tema", b =>
                {
                    b.HasOne("PeD.Models.Catalogs.CatalogTema", "CatalogTema")
                        .WithMany()
                        .HasForeignKey("CatalogTemaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeD.Models.Projetos.Projeto", null)
                        .WithOne("Tema")
                        .HasForeignKey("PeD.Models.Projetos.Tema", "ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Projetos.TemaSubTema", b =>
                {
                    b.HasOne("PeD.Models.Catalogs.CatalogSubTema", "CatalogSubTema")
                        .WithMany()
                        .HasForeignKey("CatalogSubTemaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeD.Models.Projetos.Tema", null)
                        .WithMany("SubTemas")
                        .HasForeignKey("TemaId");
                });

            modelBuilder.Entity("PeD.Models.Projetos.Upload", b =>
                {
                    b.HasOne("PeD.Models.Projetos.RegistroFinanceiro", null)
                        .WithMany("Uploads")
                        .HasForeignKey("RegistroFinanceiroId");

                    b.HasOne("PeD.Models.Projetos.RelatorioFinal", null)
                        .WithMany("Uploads")
                        .HasForeignKey("RelatorioFinalId");

                    b.HasOne("PeD.Models.Projetos.Resultados.ResultadoCapacitacao", null)
                        .WithMany("Uploads")
                        .HasForeignKey("ResultadoCapacitacaoId");

                    b.HasOne("PeD.Models.Projetos.Resultados.ResultadoProducao", null)
                        .WithMany("Uploads")
                        .HasForeignKey("ResultadoProducaoId");

                    b.HasOne("PeD.Models.Projetos.Tema", null)
                        .WithMany("Uploads")
                        .HasForeignKey("TemaId");

                    b.HasOne("PeD.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PeD.Models.Projetos.UserProjeto", b =>
                {
                    b.HasOne("PeD.Models.Projetos.CatalogUserPermissao", "CatalogUserPermissao")
                        .WithMany()
                        .HasForeignKey("CatalogUserPermissaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeD.Models.Projetos.Projeto", "Projeto")
                        .WithMany("UsersProjeto")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeD.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PeD.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PeD.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeD.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PeD.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PeD.Models.Demandas.DemandaFile", b =>
                {
                    b.HasOne("PeD.Models.Demandas.Demanda", "Demanda")
                        .WithMany()
                        .HasForeignKey("DemandaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
